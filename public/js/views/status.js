// Generated by CoffeeScript 1.9.1
(function() {
  define(['mr', 'underscore', 'text!templates/status.html'], function(Mr, _, statusTpl) {
    return Mr.ItemView.extend({
      template: _.template(statusTpl),
      ui: {
        showIncompleted: '#show-incompleted',
        showCompleted: '#show-completed',
        showAll: '#show-all'
      },
      events: {
        'click @ui.showIncompleted': 'onShowIncompleted',
        'click @ui.showCompleted': 'onShowCompleted',
        'click @ui.showAll': 'onShowAll'
      },
      onShowIncompleted: function() {
        this.model.set('show', false);
        return this.model.set('highlight', this.ui.showIncompleted.selector);
      },
      onShowCompleted: function() {
        this.model.set("show", true);
        return this.model.set('highlight', this.ui.showCompleted.selector);
      },
      onShowAll: function() {
        this.model.set("show", null);
        return this.model.set('highlight', this.ui.showAll.selector);
      },
      initialize: function() {
        this.model = new Backbone.Model();
        return this.model.set({
          'show': null,
          'highlight': this.ui.showAll
        });
      },
      modelEvents: function() {
        return {
          'change': this.filterCollection
        };
      },
      collectionEvents: function() {
        return {
          'add': 'render',
          'remove': 'render',
          'change:completed': 'filterCollection'
        };
      },
      serializeData: function() {
        var completed, incompleted, overall;
        overall = this.collection.length;
        completed = this.collection.where({
          completed: true
        }).length;
        incompleted = overall - completed;
        return {
          overall: overall,
          completed: completed,
          incompleted: incompleted
        };
      },
      filterCollection: function() {
        var word;
        word = this.model.get('show');
        this.collection.each(function(item) {
          if (word === null) {
            return item.set('isHidden', false);
          } else {
            return item.set('isHidden', item.get('completed') !== word);
          }
        });
        return this.render();
      },
      onRender: function() {
        $(this.model.get('highlight')).addClass('btn-info active');
        return this.delegateEvents();
      }
    });
  });

}).call(this);

//# sourceMappingURL=status.js.map
