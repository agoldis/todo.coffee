// Generated by CoffeeScript 1.9.1
(function() {
  define(['mr', 'underscore', 'text!templates/status.html'], function(Mr, _, statusTpl) {
    return Mr.ItemView.extend({
      template: _.template(statusTpl),
      events: {
        'click #show-incompleted': function() {
          return this.model.set('show', 'incompleted');
        },
        'click #show-completed': function() {
          return this.model.set("show", "completed");
        },
        'click #show-all': function() {
          return this.model.set("show", "all");
        }
      },
      initialize: function() {
        this.model = new Backbone.Model();
        this.model.set("show", "all");
        this.listenTo(this.model, "change", this.filterCollection);
        this.listenTo(this.collection, 'add', this.renderCounters);
        this.listenTo(this.collection, 'remove', this.renderCounters);
        return this.listenTo(this.collection, 'change:completed', this.filterCollection);
      },
      getStatus: function() {
        var completed, incompleted, overall;
        overall = this.collection.length;
        completed = this.collection.where({
          completed: true
        }).length;
        incompleted = overall - completed;
        return {
          overall: overall,
          completed: completed,
          incompleted: incompleted
        };
      },
      filterCollection: function() {
        var word;
        word = this.model.get('show');
        this.collection.each(function(item) {
          if (word === 'all') {
            return item.set('isHidden', false);
          } else if (word === 'completed') {
            return item.set('isHidden', !item.get('completed'));
          } else {
            return item.set('isHidden', item.get('completed'));
          }
        });
        return this.render();
      },
      renderCounters: function() {
        var status;
        status = this.getStatus();
        this.$el.find('[data-count=completed]').html(status.completed);
        this.$el.find('[data-count=incompleted]').html(status.incompleted);
        return this.$el.find('[data-count=overall]').html(status.overall);
      },
      onRender: function() {
        this.renderCounters();
        this.$el.find('button').end().removeClass('active btn-info').find("#show-" + (this.model.get('show'))).addClass('active btn-info');
        return this.delegateEvents();
      }
    });
  });

}).call(this);

//# sourceMappingURL=status.js.map
